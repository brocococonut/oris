/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html, body {
  padding: 0;
  margin: 0;
}

* {
  box-sizing: border-box;
}

@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 400;
  src: url(fonts/MaterialIcons-Regular.woff2) format("woff2");
}
/* roboto-mono-regular - latin */
@font-face {
  font-family: "Roboto Mono";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto Mono"), local("RobotoMono-Regular"), url("fonts/roboto-mono-v7-latin-regular.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-300 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"), url("fonts/roboto-v20-latin-300.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-300italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 300;
  src: local("Roboto Light Italic"), local("Roboto-LightItalic"), url("fonts/roboto-v20-latin-300italic.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-regular - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"), local("Roboto-Regular"), url("fonts/roboto-v20-latin-regular.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 400;
  src: local("Roboto Italic"), local("Roboto-Italic"), url("fonts/roboto-v20-latin-italic.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-700 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 700;
  src: local("Roboto Bold"), local("Roboto-Bold"), url("fonts/roboto-v20-latin-700.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
/* roboto-700italic - latin */
@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 700;
  src: local("Roboto Bold Italic"), local("Roboto-BoldItalic"), url("fonts/roboto-v20-latin-700italic.woff2") format("woff2");
  /* Chrome 26+, Opera 23+, Firefox 39+ */
}
html, body {
  font-family: Roboto, sans-serif;
  font-weight: normal;
}

h1, h2, h3, h4, h5, h6, span, p, i {
  color: var(--th-on-background);
}

i.icon {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: "liga";
  font-feature-settings: "liga";
  -webkit-font-smoothing: antialiased;
}

:root {
  --th-background: #252525;
  --th-surface: #353535;
  --th-primary: #DBB4FD;
  --th-secondary: #cc00cc;
  --th-error: #bb0020;
  --th-on-primary: #efefef;
  --th-on-secondary: #efefef;
  --th-on-error: #efefef;
  --th-on-surface: #efefef;
  --th-on-background: #efefef;
  --th-nav-width: 200px;
  --th-nav-el-height: 48px;
  --th-nav-color: #DBB4FD;
  --th-nav-background: #353535;
}

html, body {
  background: var(--th-background);
}

/**
Unlike standard grids, we don't use the standard 12 columns on small, medium
and large devices. We instead have our defaults set to:
  small:  1-2 (.cs1 - .cs2)
  medium: 1-4 (.cm1 - .cm4)
  large:  1-6 (.cl1 - .cl6)

Each is a percentage derived from 100%/n
As with most grids, ours is mobile up. This means you
can just include .cs2 to have something be a 100% sized element
on all breakpoints, or even just .cs1 to have it be 50% on all devices.

You can offset elements by a margin of n% as well using .o{size}{n}
Some restrictions are put in place to ensure you don't scroll off
page though, these are created using the filter:
  col + offset <= max cols
An example would be the .cl* class list. If I had a column size of
  .cl2
then the only available offsets would be .ol1-4 as the maximum number
of columns in the large class list is 6. Similarly, the class .cs2 wouldn't
have any offsets

The standard structure of a grid is the following:
<div class="grid-cont">
  <div class="grid">
    <div class="cs2 cm2 cl4 om1 ol1">
      <!-- ... -->
    </div>
  </div>
</div>

The above example would give something that's:
  100% width on small
  50% width on medium with an offset of 25%
  50% width on large with an offset of 25%
As the last two are the same, you could simplify the class list to just be
  .cs2.cm2.om1

Grids do look better with the grid-cont element wrapped in a .container
though.
*/
/**
 * Global variables
 */
.grid-cont > .grid {
  margin-left: 0rem;
}

.grid {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
  margin: 0;
  margin-left: -0.8rem;
  padding: 0.4rem;
}
.grid .cs1, .grid .cs2,
.grid .cm1, .grid .cm2, .grid .cm3, .grid .cm4,
.grid .cl1, .grid .cl2, .grid .cl3, .grid .cl4, .grid .cl5, .grid .cl6 {
  flex: 0 0 50%;
  padding: 0.4rem;
  max-width: 50%;
  transition: flex 0.3s cubic-bezier(0.445, 0.05, 0.55, 0.95), max-width 0.3s cubic-bezier(0.445, 0.05, 0.55, 0.95);
}
.grid .cs1 > *, .grid .cs2 > *,
.grid .cm1 > *, .grid .cm2 > *, .grid .cm3 > *, .grid .cm4 > *,
.grid .cl1 > *, .grid .cl2 > *, .grid .cl3 > *, .grid .cl4 > *, .grid .cl5 > *, .grid .cl6 > * {
  max-width: 100%;
}
.grid .cs1 {
  flex: 0 0 50%;
  max-width: 50%;
}
.grid .cs1.os0 {
  margin-left: 0%;
}
.grid .cs1.os1 {
  margin-left: 50%;
}
.grid .cs2 {
  flex: 0 0 100%;
  max-width: 100%;
}
.grid .cs2.os0 {
  margin-left: 0%;
}

@media (min-width: 38rem) {
  .grid .cm1 {
    flex: 0 0 25%;
    max-width: 25%;
  }
  .grid .cm1.om0 {
    margin-left: 0%;
  }
  .grid .cm1.om1 {
    margin-left: 25%;
  }
  .grid .cm1.om2 {
    margin-left: 50%;
  }
  .grid .cm1.om3 {
    margin-left: 75%;
  }
  .grid .cm2 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .grid .cm2.om0 {
    margin-left: 0%;
  }
  .grid .cm2.om1 {
    margin-left: 25%;
  }
  .grid .cm2.om2 {
    margin-left: 50%;
  }
  .grid .cm3 {
    flex: 0 0 75%;
    max-width: 75%;
  }
  .grid .cm3.om0 {
    margin-left: 0%;
  }
  .grid .cm3.om1 {
    margin-left: 25%;
  }
  .grid .cm4 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  .grid .cm4.om0 {
    margin-left: 0%;
  }
}
@media (min-width: 60rem) {
  .grid .cl1 {
    flex: 0 0 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .grid .cl1.ol0 {
    margin-left: 0%;
  }
  .grid .cl1.ol1 {
    margin-left: 16.6666666667%;
  }
  .grid .cl1.ol2 {
    margin-left: 33.3333333333%;
  }
  .grid .cl1.ol3 {
    margin-left: 50%;
  }
  .grid .cl1.ol4 {
    margin-left: 66.6666666667%;
  }
  .grid .cl1.ol5 {
    margin-left: 83.3333333333%;
  }
  .grid .cl2 {
    flex: 0 0 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .grid .cl2.ol0 {
    margin-left: 0%;
  }
  .grid .cl2.ol1 {
    margin-left: 16.6666666667%;
  }
  .grid .cl2.ol2 {
    margin-left: 33.3333333333%;
  }
  .grid .cl2.ol3 {
    margin-left: 50%;
  }
  .grid .cl2.ol4 {
    margin-left: 66.6666666667%;
  }
  .grid .cl3 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .grid .cl3.ol0 {
    margin-left: 0%;
  }
  .grid .cl3.ol1 {
    margin-left: 16.6666666667%;
  }
  .grid .cl3.ol2 {
    margin-left: 33.3333333333%;
  }
  .grid .cl3.ol3 {
    margin-left: 50%;
  }
  .grid .cl4 {
    flex: 0 0 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .grid .cl4.ol0 {
    margin-left: 0%;
  }
  .grid .cl4.ol1 {
    margin-left: 16.6666666667%;
  }
  .grid .cl4.ol2 {
    margin-left: 33.3333333333%;
  }
  .grid .cl5 {
    flex: 0 0 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .grid .cl5.ol0 {
    margin-left: 0%;
  }
  .grid .cl5.ol1 {
    margin-left: 16.6666666667%;
  }
  .grid .cl6 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  .grid .cl6.ol0 {
    margin-left: 0%;
  }
}
/**
 * Chips are used for anything from tags to user icons. Tags have a couple
 * custom classes that have also been lumped in here for ease of access.
 * 
 * A standard chip is pretty simple, it looks like this:
 * <div class="chip">
 *   Chip text goes here
 *   <i class="icon close_cust">close</i>
 * </div>
 * 
 * A chip that has an image off to the left would look something like this:
 * <div class="chip">
 *   <img src="/path/to/image.png">
 *   Chip text goes here
 *   <i class="icon close_cust">close</i>
 * </div>
 * 
 * The close button is optional, and extra styling for image outlines can be
 * applied to the image with the classes: .ring-red,
 *                                        .ring-blue,
 *                                        .ring-yellow,
 *                                        .ring-green
 */
.chip {
  background-color: #e4e4e4;
  border-radius: 8px;
  color: #161616;
  display: inline-block;
  font-size: 13px;
  font-weight: 500;
  height: 32px;
  line-height: 32px;
  margin: 0 5px 5px 0;
  min-width: 32px;
  padding: 0 10px 0;
  font-weight: normal;
  text-align: center;
  width: fit-content;
}
.chip:focus {
  outline: none;
  background-color: #26a69a;
  color: #fff;
}
.chip .close_cust, .chip .close {
  cursor: pointer;
  float: right;
  font-size: inherit;
  line-height: inherit;
  padding: 0 8px 0;
}
.chip > img {
  float: left;
  margin: 0 5px 0 -10px;
  height: 32px;
  width: 32px;
  border-radius: 8px;
  border-width: 1px;
  border-style: solid;
  border-color: #fff;
}
.chip > img.ring-red {
  border-color: #de2128;
}
.chip > img.ring-blue {
  border-color: #0c81f5;
}
.chip > img.ring-yellow {
  border-color: #f1dc23;
}
.chip > img.ring-green {
  border-color: #3bb140;
}

/**
 * Standard card element
 * 
 * The general structure of a card is as follows:
 * <div class="card">
 *   <div class="card-header">
 *     <h1-6>Title</h1-6>
 *   </div>
 *   <div class="card-body">
 *     <p>Contents</p>
 *   </div>
 *   <div class="card-footer">
 *     <p>Footer</p>
 *   </div>
 * </div>
 * 
 * Cards can have any number of card-header, body, or footer components in
 * any order. For the best effect, h4 is used in the card-header in most
 * places around the site.
 *
 */
.card {
  background-color: var(--th-surface);
  border-radius: 0.25em;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  color: var(--th-on-surface);
  display: inline-block;
  min-height: 36px;
  min-width: 50px;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}
.card h1, .card h2, .card h3, .card h4, .card h5, .card h6, .card span, .card p, .card i {
  color: var(--th-on-surface);
}
.card .card-header,
.card .card-body,
.card .card-footer {
  padding: 8px;
  display: block;
  width: 100%;
  word-wrap: break-word;
  font-size: 1rem;
}
.card .card-header:not(:last-child),
.card .card-body:not(:last-child),
.card .card-footer:not(:last-child) {
  border-bottom: 1px solid rgba(160, 160, 160, 0.2);
}
.card .card-header a,
.card .card-body a,
.card .card-footer a {
  color: inherit;
  text-decoration: underline;
}
.card .card-header {
  font-weight: bold;
}
.card .card-header a:not(.-rm-ls) {
  color: inherit;
}
.card .card-header a:not(.-rm-ls)::before {
  content: "- ";
}
.card .card-header a:not(.-rm-ls)::after {
  content: " -";
}

/* Standard Media Card:
 *
 * <div class="card media">
 *   <img src="https://via.placeholder.com/300x300" alt="">
 *   <div class="details-container">
 *     <div class="card-details media-title">
 *       <span>Here'll be the title for the media card</span>
 *     </div>
 *     <div class="card-details">
 *       <p>Any extra content/descriptions you want</p>
 *     </div>
 *   </div>
 * </div>
 * 
 * A media card can have any number of card-details elements inside it, the
 * media-title does typically have to be at the start though.
 * Media cards also have compatibility with the HTML5 <video> and 
 * <object> tags instead of images if you'd rather have a video media-card.
 */
.media-card {
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin: 0;
  display: grid;
  position: relative;
  grid-template-areas: "media" "content";
  border-radius: 0.25rem;
  z-index: 1;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}
.media-card h1, .media-card h2, .media-card h3, .media-card h4, .media-card h5, .media-card h6, .media-card span, .media-card p, .media-card i {
  color: var(--on-surface);
}
.media-card > img,
.media-card > video,
.media-card > object,
.media-card > .details-container,
.media-card > .details-container > .card-details {
  width: 100%;
}
.media-card > img:first-child,
.media-card > video:first-child,
.media-card > .details-container:first-child,
.media-card > .details-container:first-child > .card-details:first-child {
  grid-area: media;
}
.media-card > .details-container:not(:first-child),
.media-card > .details-container:not(:first-child) > .card-details {
  grid-area: content;
}
.media-card .details-container {
  background-color: var(--th-surface);
  color: var(--th-on-surface);
  max-width: 100%;
  overflow: hidden;
}
.media-card .details-container .card-details {
  grid-area: content;
  width: 100%;
  min-height: 26px;
  background-color: var(--th-surface);
}
.media-card .details-container .card-details > * {
  min-height: 26px;
  line-height: 26px;
}
.media-card .details-container .card-details > span,
.media-card .details-container .card-details > p {
  margin: 0 5px;
  max-width: 100%;
}
.media-card .details-container .card-details:not(:last-child) {
  border-bottom: rgba(51, 51, 51, 0.1) 1px solid;
}
.media-card .details-container .card-details.media-title {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
}

/**
 * Site navigation is a bit of a tricky one here. Only one should be
 * spawned on a site due to the positioning and specificity of them.
 * A nav has an optional checkbox and label preceding them to enable
 * sticky withdrawals, but it's highly recommended you include them
 * as some of the stylings depend on it. This might change in the
 * future, but for now it is how it is.
 * 
 * We remove the scrollbar on webkit based browsers like chrome and
 * Safari, as well as leave a line of code to set the scrollbar
 * width to 0px when firefox adds support for it in the non-beta
 * channels in December of 2018.
 * 
 * A typical nav can look complex in structure, but boils down to:
 * <!-- Checkbox to enable sticky nav withdrawal -->
 * <input type="checkbox" class="lock-nav" id="lock">
 * <label for="lock" class="lock-nav-tog">
 *   <i class="icon"></i>
 * </label>
 * <nav class="side-nav">
 *   <ul>
 *     <!-- List of links -->
 *     <a href="/profile/page" {if logged in}>
 *       <li>
 *         <!-- Optional text -->
 *         <p>Username</p>
 *         <!-- Optional image -->
 *         <img src="/avatar/address.png" alt="">
 *       </li>
 *     </a>
 *     <a href="/link/1">
 *       <li>
 *         <p>Link text</p>
 *         <i class="icon">icon</i>
 *       </li>
 *     </a>
 *     <a href="/link/2">
 *       <li>
 *         <p>Link text</p>
 *         <i class="icon">icon</i>
 *       </li>
 *     </a>
 *   </ul>
 * </nav>
 */
input.lock-nav[type=checkbox] {
  display: none;
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog {
  width: var(--th-nav-width);
  background-color: var(--th-nav-background);
  opacity: 0.2;
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog:hover {
  background-color: rgba(0, 0, 0, 0.5);
  opacity: 1;
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav {
  width: var(--th-nav-width);
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li p {
  width: calc(var(--th-nav-width) - var(--th-nav-el-height) - 5px);
  visibility: visible;
  opacity: 1;
  transition: visibility 0s, opacity 0.5s, width 0.3s;
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li i.icon {
  background-color: rgba(0, 0, 0, 0.2);
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav + main, input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav + main + footer {
  margin-left: var(--th-nav-width);
}
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog i.icon::before {
  content: "lock";
}
input.lock-nav[type=checkbox] + label.lock-nav-tog {
  display: block;
  position: fixed;
  left: 0;
  bottom: 0;
  height: var(--th-nav-el-height);
  width: var(--th-nav-el-height);
  transition: width cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.3s, background-color cubic-bezier(0.175, 0.885, 0.32, 1.1) 1s, opacity cubic-bezier(0.175, 0.885, 0.32, 1.1) 1s;
  background-color: rgba(0, 0, 0, 0.5);
  color: var(--th-nav-color);
  z-index: 1000;
  line-height: var(--th-nav-el-height);
  font-size: var(--th-nav-el-height);
  text-align: center;
  padding: unset;
}
input.lock-nav[type=checkbox] + label.lock-nav-tog::before, input.lock-nav[type=checkbox] + label.lock-nav-tog::after {
  content: unset;
}
input.lock-nav[type=checkbox] + label.lock-nav-tog i.icon::before {
  content: "lock_open";
}

nav.side-nav {
  position: fixed;
  display: block;
  top: 0;
  left: 0;
  width: var(--th-nav-el-height);
  height: 100vh;
  background-color: var(--th-nav-background);
  color: var(--th-nav-color);
  transition: width cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.3s;
  z-index: 999;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
  overflow-y: scroll;
  scrollbar-width: none;
}
nav.side-nav::-webkit-scrollbar {
  display: none;
}
nav.side-nav:hover {
  width: var(--th-nav-width);
}
nav.side-nav:hover ul a, nav.side-nav:hover ul li {
  background-color: inherit;
}
nav.side-nav:hover ul a li:hover, nav.side-nav:hover ul li:hover {
  background-color: rgba(0, 0, 0, 0.2);
}
nav.side-nav:hover ul a li p, nav.side-nav:hover ul a li p:last-child, nav.side-nav:hover ul li p, nav.side-nav:hover ul li p:last-child {
  width: calc(var(--th-nav-width) - var(--th-nav-el-height) - 5px);
  visibility: visible;
  opacity: 1;
  transition: visibility 0s, opacity 0.5s, width 0.3s;
}
nav.side-nav:hover ul a li i.icon[class*=perm-], nav.side-nav:hover ul li i.icon[class*=perm-] {
  color: #fafafa !important;
  transition: color cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.8s;
}
nav.side-nav:hover + label.lock-nav-tog {
  width: var(--th-nav-width);
}
nav.side-nav + main, nav.side-nav + main + footer {
  margin-left: var(--th-nav-el-height);
  transition: margin-left cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.3s;
}
nav.side-nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
  padding-bottom: var(--th-nav-el-height);
}
nav.side-nav ul a li, nav.side-nav ul li {
  display: block;
  height: var(--th-nav-el-height);
  text-align: center;
  float: none;
}
nav.side-nav ul a li:not(:first-child), nav.side-nav ul li:not(:first-child) {
  margin-top: 1px;
}
nav.side-nav ul a li p, nav.side-nav ul li p {
  margin: 0;
  display: block;
  position: absolute;
  left: 5px;
  width: calc(var(--th-nav-width) - var(--th-nav-el-height) - 5px);
  height: var(--th-nav-el-height);
  line-height: var(--th-nav-el-height);
  visibility: hidden;
  opacity: 0;
  transition: visibility 0.4s, opacity 0.2s, width 0.1s;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-x: hidden;
}
nav.side-nav ul a li p:last-child, nav.side-nav ul li p:last-child {
  width: calc(var(--th-nav-el-height) - 5px);
  visibility: visible;
  opacity: 1;
}
nav.side-nav ul a li p:not(:last-child), nav.side-nav ul li p:not(:last-child) {
  width: calc(var(--th-nav-width) - var(--th-nav-el-height) - 5px);
}
nav.side-nav ul a li i.icon,
nav.side-nav ul a li img, nav.side-nav ul li i.icon,
nav.side-nav ul li img {
  width: var(--th-nav-el-height);
  height: var(--th-nav-el-height);
  display: block;
  position: absolute;
  right: 0;
  white-space: nowrap;
}
nav.side-nav ul a li i.icon, nav.side-nav ul li i.icon {
  line-height: var(--th-nav-el-height);
  text-align: center;
}

nav.side-nav:not(:hover):first-child ul a li i.icon[class*=perm-], nav.side-nav:not(:hover):first-child ul li i.icon[class*=perm-],
input.lock-nav[type=checkbox]:not(:checked) + label.lock-nav-tog + nav.side-nav:not(:hover) ul a li i.icon[class*=perm-],
input.lock-nav[type=checkbox]:not(:checked) + label.lock-nav-tog + nav.side-nav:not(:hover) ul li i.icon[class*=perm-] {
  background-color: rgba(0, 0, 0, 0.5) !important;
}

nav.side-nav ul a li i.icon[class*=perm-], nav.side-nav ul li i.icon[class*=perm-],
nav.side-nav:hover ul a li i.icon[class*=perm-],
nav.side-nav:hover ul li i.icon[class*=perm-] {
  transition: background-color cubic-bezier(0.175, 0.885, 0.32, 1) 1s;
}

input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li i.icon[class*=perm-], input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li i.icon[class*=perm-] {
  color: #fafafa !important;
  transition: color cubic-bezier(0.175, 0.885, 0.32, 1.1) 0.8s;
}

@media all and (max-width: 720px) {
  input.lock-nav[type=checkbox] + label.lock-nav-tog,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog {
    display: none;
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav {
    width: var(--th-nav-el-height);
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul {
    background-color: inherit;
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul a li, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul li,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li {
    background-color: inherit;
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul a li:hover p, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul a li:active p, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul li:hover p, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul li:active p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li:hover p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li:active p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li:hover p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li:active p {
    opacity: 1;
    transform: translateX(calc(var(--th-nav-el-height) - 5px));
    width: calc(var(--th-nav-width) - 10px);
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul a li p, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul li p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li p,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li p {
    height: calc(var(--th-nav-el-height) - 2px);
    margin-top: -1px;
    z-index: 1000000;
    opacity: 0;
    transform: translateX(-152px);
    background-color: inherit;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
    transition: transform cubic-bezier(0.175, 0.885, 0.32, 1) 0.3s, opacity cubic-bezier(0.175, 0.885, 0.32, 1) 0.6s;
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul a li i, input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav ul li i,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul a li i,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav ul li i {
    z-index: 1000001;
    background-color: inherit;
  }
  input.lock-nav[type=checkbox] + label.lock-nav-tog + nav.side-nav + main,
input.lock-nav[type=checkbox]:checked + label.lock-nav-tog + nav.side-nav + main {
    margin-left: var(--th-nav-el-height);
  }
}
.lock-nav h1, .lock-nav h2, .lock-nav h3, .lock-nav h4, .lock-nav h5, .lock-nav h6, .lock-nav span, .lock-nav p, .lock-nav i, nav.side-nav h1, nav.side-nav h2, nav.side-nav h3, nav.side-nav h4, nav.side-nav h5, nav.side-nav h6, nav.side-nav span, nav.side-nav p, nav.side-nav i {
  color: var(--th-nav-color);
}

pre, code {
  font-family: "Roboto Mono", monospace;
  overflow-x: scroll;
  font-size: inherit;
}

pre, :not(pre) > code {
  box-shadow: inset 0 0 4px 3px rgba(0, 0, 0, 0.1);
  padding: 4px;
}

hr {
  border: none;
  border-top: 2px dashed var(--th-on-background);
}

/**
 * The standard comment structure has nesting with support for up to
 * 7 layers of child comments.
 * Upon hover, the sidebar of the comment tree that's being hovered over
 * will become dashed to easily track comment threads.
 * New comments will have their sidebar colour changed to blue instead of
 * the standard grey gradient.
 * 
 * It's recommended that comments are just put in a standard container element
 * for proper padding. Apart from that, there aren't any particular
 * requirements for comments to be displayed correctly.
 * 
 * Comment structure:
 * <div class="comment">
 *   <div class="content">
 *     <!-- Profile icon -->
 *     <a href="/profile/link" class="avatar">
 *       <img src="/avatar/url" alt="">
 *     </a>
 *     
 *     <!-- Who the comment is by -->
 *     <span class="username">Username</span>
 * 
 *     <!-- Markdown that has been rendered -->
 *     <div data-before="" class="markdown-rendered">
 *       <p>Example comment text</p>
 *     </div>
 *     
 *     <!-- Date formatted with the humanizeDateString function listed below -->
 *     <i class="date">a few seconds ago (11/Dec/2018 20:59:08)</i>
 * 
 *     <!-- Comment actions, can be increased/extended as needed -->
 *     <div class="actions">
 *       <div class="action-container"><span>reply</span></div>
 *     </div>
 *   </div>
 *   <!-- Child comments - Recurses up to 7 layers-->
 *   <div class="children">
 *     <div class="comment">
 *         <!-- ... -->
 *     </div>
 *   </div>
 * </div>
 */
.comment {
  display: inline-block;
  height: fit-content;
  width: 100%;
  box-sizing: border-box;
  border-left: solid 0.2rem;
  border-left-color: var(--th-on-surface);
}
.comment:hover {
  border-left-style: dashed;
  border-left-width: 0.2rem;
}
.comment.new {
  border-left-color: var(--th-primary);
}
.comment .content {
  box-sizing: border-box;
  display: grid;
  grid-template: "avatar  username" "avatar  comment-text" "avatar  date" "avatar  links" "avatar  actions" "avatar  editor";
  grid-template-columns: 36px 1fr;
}
.comment .content + * {
  margin-top: 20px;
}
.comment .content:hover > .actions {
  pointer-events: unset;
  opacity: 1;
}
.comment .content:first-child {
  margin-left: 10px;
}
.comment .content .blank {
  grid-area: blank;
}
.comment .content .avatar,
.comment .content a.avatar img {
  grid-area: avatar;
  width: 36px;
  height: 36px;
  max-width: 36px;
}
.comment .content span.username, .comment .content a.username, .comment .content i.date, .comment .content .comment-text, .comment .content .actions {
  margin-left: 10px;
}
.comment .content span.username, .comment .content a.username, .comment .content i.date {
  height: 36px;
  line-height: 36px;
}
.comment .content span.username, .comment .content a.username {
  font-weight: 600;
  font-size: 1.2rem;
  grid-area: username;
}
.comment .content i.date {
  grid-area: date;
  font-weight: 100;
  font-size: smaller;
  justify-self: right;
}
.comment .content i.date:before {
  content: ": ";
}
.comment .content i.date:after {
  content: " :";
}
.comment .content .comment-text {
  grid-area: comment-text;
  font-size: 0.95rem;
}
.comment .content .actions {
  grid-area: actions;
  pointer-events: none;
  opacity: 0;
  transition: opacity linear 0.1s;
}
.comment .content .actions > .action-container {
  display: inline;
  border-right: solid rgba(51, 51, 51, 0.8) 2px;
  padding-right: 5px;
}
.comment .content .actions > .action-container:link, .comment .content .actions > .action-container:visited {
  text-decoration: none;
  color: unset;
}
.comment .content .actions > .action-container:last-child {
  border-right: none;
  padding-right: none;
}
.comment .content .actions > .action-container > * {
  height: 15px;
  line-height: 15px;
  font-size: 14px;
}
.comment .children {
  margin-left: 15px;
}

/*# sourceMappingURL=styles.css.map */
